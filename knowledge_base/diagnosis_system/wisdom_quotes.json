{
  "version": "2.0",
  "description": "智慧金句库 - 集成知识库药方金句 + 通用金句库",
  "last_updated": "2025-06-14",
  
  "data_sources": {
    "primary": "knowledge_base药方文件中的核心智慧部分",
    "secondary": "通用金句库补充",
    "extraction_method": "动态解析markdown文件中的金句内容"
  },
  
  "prescription_quotes_mapping": {
    "description": "从药方文件中提取的金句映射",
    "extraction_rules": {
      "markdown_pattern": "## 💎 核心智慧（名人金句）",
      "quote_pattern": "> **\"(.+?)\"** .*?—— (.+)",
      "explanation_pattern": "\\*\\*金句深层含义\\*\\*：(.+)"
    },
    "known_mappings": {
      "P20": {
        "prescription_name": "创始人冲突认知解码器",
        "core_quotes": [
          {
            "text": "Great teams are not made up of many well-rounded players. Great teams are made up of players who specialize in what they do best.",
            "chinese_translation": "伟大的团队不是由许多全能选手组成的，而是由专精于自己最擅长领域的选手组成的。",
            "author": "Tom Peters",
            "deep_meaning": "团队成功的关键在于专业化分工，而非个人能力的全面性",
            "context": "团队认知偏差"
          }
        ]
      },
      "P54": {
        "prescription_name": "用户画像精准化剂",
        "core_quotes": [
          {
            "text": "If you want to serve everyone, you can't provide excellent service to anyone.",
            "chinese_translation": "如果你想为所有人服务，你就无法为任何人提供卓越的服务。",
            "author": "市场细分的智慧",
            "deep_meaning": "卓越的服务来自于对特定用户群体需求的深度满足",
            "context": "用户画像精准化"
          },
          {
            "text": "Design for the specific, and you will delight the general.",
            "chinese_translation": "为具体而设计，你将取悦大众。",
            "author": "经典设计原则",
            "deep_meaning": "最好的产品往往从为具体用户解决具体问题开始",
            "context": "产品设计哲学"
          }
        ]
      },
      "P60": {
        "prescription_name": "第二曲线思维剂",
        "core_quotes": [
          {
            "text": "The paradox of the S-curve is that when you are at the top of it, you feel on top of the world. But it is at that very point that you need to be starting the next curve.",
            "chinese_translation": "S曲线的悖论在于，当你处于它的顶峰时，你感觉自己站在了世界之巅。但恰恰是在那个时刻，你就需要开始你的下一条曲线了。",
            "author": "查尔斯·汉迪",
            "deep_meaning": "启动第二曲线最反人性、也最关键的时机是在巅峰时刻",
            "context": "战略转型时机"
          },
          {
            "text": "To manage a second curve, you need a second team.",
            "chinese_translation": "要管理第二曲线，你需要第二支团队。",
            "author": "查尔斯·汉迪",
            "deep_meaning": "第二曲线成功需要不同的人才、文化和考核标准",
            "context": "组织变革管理"
          }
        ]
      },
      "P26": {
        "prescription_name": "商业模式设计思维剂",
        "core_quotes": [
          {
            "text": "A business model describes how your company creates, delivers, and monetizes value.",
            "chinese_translation": "商业模式描述了你的公司如何创造、交付和货币化价值。",
            "author": "商业模式画布",
            "deep_meaning": "商业模式是价值创造的系统性设计",
            "context": "商业模式设计"
          }
        ]
      }
    }
  },
  
  "dynamic_extraction_system": {
    "description": "动态从药方文件中提取金句的系统",
    "implementation": {
      "step1": "扫描knowledge_base目录中的所有.md文件",
      "step2": "使用正则表达式提取'💎 核心智慧'部分",
      "step3": "解析引用格式的金句和作者信息",
      "step4": "提取'金句深层含义'的解释内容",
      "step5": "构建prescription_id到quotes的映射关系"
    },
    "code_example": {
      "python": [
        "import re",
        "from pathlib import Path",
        "",
        "def extract_quotes_from_prescription(file_path):",
        "    with open(file_path, 'r', encoding='utf-8') as f:",
        "        content = f.read()",
        "    ",
        "    # 提取核心智慧部分",
        "    wisdom_pattern = r'## 💎 核心智慧（名人金句）(.*?)(?=##|$)'",
        "    wisdom_match = re.search(wisdom_pattern, content, re.DOTALL)",
        "    ",
        "    if wisdom_match:",
        "        wisdom_content = wisdom_match.group(1)",
        "        # 提取金句",
        "        quote_pattern = r'> \\*\\*\"(.+?)\"\\*\\* .*?—— (.+?)\\n\\n\\*\\*金句深层含义\\*\\*：(.+?)\\n'",
        "        quotes = re.findall(quote_pattern, wisdom_content, re.DOTALL)",
        "        return quotes",
        "    return []"
      ]
    }
  },
  
  "supplementary_quotes": {
    "description": "补充通用金句，用于没有特定药方对应的场景",
    "general_wisdom": [
      {
        "quote_id": "general_001",
        "text": "The first principle is that you must not fool yourself — and you are the easiest person to fool.",
        "chinese_translation": "第一原理是你不能欺骗自己——而你是最容易被欺骗的人。",
        "author": "Richard Feynman",
        "context": "认知觉醒开场",
        "usage_scenarios": ["诊断开始", "认知冲击", "自我反思"],
        "impact_score": 10
      },
      {
        "quote_id": "general_002",
        "text": "We cannot solve our problems with the same thinking we used when we created them.",
        "chinese_translation": "我们无法用创造问题时的思维来解决问题。",
        "author": "Albert Einstein",
        "context": "认知重构总结",
        "usage_scenarios": ["教学结束", "认知转换", "思维升级"],
        "impact_score": 9
      },
      {
        "quote_id": "general_003",
        "text": "The unexamined life is not worth living.",
        "chinese_translation": "未经审视的人生不值得过。",
        "author": "Socrates",
        "context": "苏格拉底式引导",
        "usage_scenarios": ["深度思考", "自我审视", "哲学思辨"],
        "impact_score": 9
      }
    ]
  },
  
  "quote_selection_algorithm": {
    "description": "智能金句选择算法",
    "priority_rules": [
      {
        "rule": "优先使用与诊断药方相关的金句",
        "weight": 10,
        "method": "从prescription_quotes_mapping中查找对应金句"
      },
      {
        "rule": "根据使用场景选择合适的通用金句",
        "weight": 8,
        "method": "根据usage_scenarios匹配当前环节"
      },
      {
        "rule": "考虑金句的影响力评分",
        "weight": 6,
        "method": "优先选择impact_score高的金句"
      },
      {
        "rule": "避免重复使用相同金句",
        "weight": 5,
        "method": "维护会话内的已使用金句列表"
      }
    ],
    "contextual_matching": {
      "opening": ["general_003", "general_001"],
      "diagnosis": ["prescription_specific_quotes"],
      "teaching": ["prescription_specific_quotes", "general_002"],
      "closing": ["general_002", "general_001"]
    }
  },
  
  "api_interface": {
    "description": "提供给AI提示词系统的调用接口",
    "functions": [
      {
        "name": "get_quote_by_prescription",
        "description": "根据药方ID获取相关金句",
        "parameters": {
          "prescription_id": "string",
          "context": "string (optional)",
          "max_quotes": "integer (default: 1)"
        },
        "return": "list of quote objects"
      },
      {
        "name": "get_contextual_quote",
        "description": "根据使用场景获取合适金句",
        "parameters": {
          "context": "string (opening|diagnosis|teaching|closing)",
          "exclude_used": "list of quote_ids (optional)"
        },
        "return": "quote object"
      },
      {
        "name": "extract_quotes_from_knowledge_base",
        "description": "动态从知识库提取金句",
        "parameters": {
          "knowledge_base_path": "string",
          "refresh_cache": "boolean (default: false)"
        },
        "return": "updated prescription_quotes_mapping"
      }
    ]
  },
  
  "integration_benefits": {
    "data_consistency": "金句与药方内容保持一致，避免冲突",
    "maintenance_efficiency": "只需在药方文件中维护金句，自动同步",
    "contextual_relevance": "金句与诊断结果高度相关，增强说服力",
    "dynamic_expansion": "新增药方时自动提取金句，无需手动更新",
    "storage_optimization": "避免数据重复，减少存储空间"
  },
  
  "fallback_mechanism": {
    "description": "当知识库金句不可用时的备用方案",
    "conditions": [
      "药方文件不存在或无法读取",
      "金句格式不符合解析规则",
      "动态提取系统故障"
    ],
    "actions": [
      "使用supplementary_quotes中的通用金句",
      "记录错误日志用于后续修复",
      "保证系统正常运行不受影响"
    ]
  },
  
  "usage_examples": {
    "scenario_1": {
      "description": "用户被诊断为P20（创始人冲突），需要相关金句",
      "api_call": "get_quote_by_prescription('P20', 'teaching')",
      "expected_result": "Tom Peters关于团队专业化的金句"
    },
    "scenario_2": {
      "description": "15分钟流程开场，需要引发思考的金句",
      "api_call": "get_contextual_quote('opening')",
      "expected_result": "Socrates关于审视人生的金句"
    },
    "scenario_3": {
      "description": "知识库新增药方P99，需要提取其中的金句",
      "api_call": "extract_quotes_from_knowledge_base('/knowledge_base')",
      "expected_result": "更新prescription_quotes_mapping，包含P99的金句"
    }
  }
}
